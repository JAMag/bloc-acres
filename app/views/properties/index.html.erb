<% @title="Moverable Search" %>
<!--<div class="container-fluid">-->
<div class="container">
  <!--<div class="well">-->
    <!--<div class="well"><h4> See your new home today!</h4></div>-->
  <!--</div>-->

  <input id="pac-input" class="controls" type="hidden" placeholder="Search Box">

      <div class="row col-md-8 float-left" style="100vh;">
        <div class="show-search">
        <a class="" data-toggle="collapse" href="#search-map-canvas" aria-expanded="false" aria-controls="collapseExample">
          <i class="fa fa-arrow-circle-o-down" aria-hidden="true" style="color: #f27c53; font-size: 24px"></i>
          Show Map
          <i class="fa fa-arrow-circle-o-down" aria-hidden="true" style="color: #f27c53; font-size: 24px"></i>
        </a>
      </div>
        <div id="search-map-canvas"></div>
        <!--<div class="panel panel-default hidden-xs">-->

              <!--<# @properties.each do |p| %>-->
              <!--<div class="row">-->
                <!--<div class="">-->
                  <!--<# render partial: "layouts/search_property_view", locals: {p: p} if p.showcase %>-->

                <!--</div>-->
              <!--</div>-->
          <!--<# end %>-->

        <!--</div>-->
      </div>

      <div class="col-md-4 float-right" id="search_right" style="
      padding:  32px;border: solid 1px #f27b52;box-shadow: 11px 20px 20px 0px #607D8B;">
        <div class="show-search">
          <a class="" data-toggle="collapse" href="#search-form" aria-expanded="false" aria-controls="collapseExample">
            <i class="fa fa-arrow-circle-o-down" aria-hidden="true" style="color: #f27c53; font-size: 24px"></i>
            Show Search
            <i class="fa fa-arrow-circle-o-down" aria-hidden="true" style="color: #f27c53; font-size: 24px"></i>
          </a>
        </div>

        <div class="">
          <div class ="search-inline" id="search-form">


            <%= form_tag properties_path, method: :get, id: 'search-field', role: 'search' do %>
                <%= select_tag 'search[structure]', options_for_select([['Home Type',''], ['Townhome', 'Townhome'], ['Condo', 'Condo'], ['House', 'House'], ['Multi-family', 'Multi-family']], (params[:search][:structure] if params[:search])) %>
                <%= select_tag 'search[price]', options_for_select([['Price', ''], ['100000', '100000'], ['125000', '125000'],['150000', '150000'],['175000', '175000'],['200000', '200000'], ['225000', '225000'],['250000', '250000'],['275000', '275000'],['300000', '300000'],['325000', '325000'], ['350000', '350000'],['375000', '375000'],['400000', '400000']], (params[:search][:price] if params[:search]))%>
                <%= select_tag 'search[beds]', options_for_select([['Beds', ''], ['1', '1'], ['2', '2'], ['3', '3'], ['4', '4'], ['5', '5'], ['6', '6'], ['7', '7']], (params[:search][:beds] if params[:search]))%>
                <%= select_tag 'search[baths]', options_for_select([['Baths', ''], ['1', '1'], ['1.5', '1.5'], ['2', '2'], ['2.5', '2.5'], ['3', '3'], ['3.5', '3.5'], ['4', '4'], ['4.5', '4.5']], (params[:search][:baths] if params[:search])) %>
<br>
                <br>

                <div id="search" class="form-group">
                  <%= text_field_tag 'search[full_search]', (params[:search][:full_search] if params[:search]), class: 'form-control', placeholder: 'City, State ...' %>
                </div>
                <div>
                  <%= button_tag type: 'submit', class: 'search__form-btn btn btn-primary-listing', style: " display:inline!important;" do %>
                      SEARCH
                      <!--<span class="glyphicon glyphicon-search"></span>-->

                  <% end %>

                </div>

            <% end %>
            <br>
            <br>
            <div class="well" id="sort">
              <p>Sort: <i class="fa fa-sort" aria-hidden="true">... </i>
              <ul >
                <li class="search-filter"><%= sortable "price" %></li>
                <li class="search-filter"><%= sortable "beds" %></li>
                <li class="search-filter"><%= sortable "baths" %></li>
              </ul>

             </p>

            </div>
            <br>





        </div>


        <!--<div id="property-index">-->
        <div id="prop-loop">

              <% @properties.each do |p| %>
                <%= render partial: "layouts/search_property_view_2", locals: {p: p} %>


                <% end %>
          <div class="well" id="search_pagination">
            <%= will_paginate @properties, :page_links => false, renderer: BootstrapPagination::Rails %>
            <br>
            <div class="btn-group">
              <% if current_user %>
                  <%= link_to 'Save Search', saved_search_properties_path(params[:search]), class:"btn btn-primary" %>
                  <%= link_to 'Use Saved', properties_path(search: Rack::Utils.parse_nested_query(current_user.saved_search)), class:"btn btn-primary" %>
              <% else %>
                  <h4>Sign Up To Save Your Search</h4>
              <% end %>

            </div>
          </div>

          <%=render partial: 'welcome/footer_all' %>
        </div>
      </div>
</div>
  </div>

  <script>
      function initMap() {

          // Create a new StyledMapType object, passing it an array of styles,
          // and the name to be displayed on the map type control.
          var styledMapType = new google.maps.StyledMapType(
                  [
                      {
                          "featureType": "poi",
                          "stylers": [
                              {
                                  "visibility": "off"
                              }
                          ]
                      },
                      {
                          "featureType": "road.highway",
                          "stylers": [
                              {
                                  "visibility": "off"
                              }
                          ]
                      },
                      {
                          "featureType": "transit",
                          "stylers": [
                              {
                                  "visibility": "off"
                              }
                          ]
                      }
                  ],
                  {name: 'Styled Map'});



          // Create a map object, and include the MapTypeId to add
          // to the map type control.
          var map = new google.maps.Map(document.getElementById('map'), {
              center: {lat: 55.647, lng: 37.581},
              zoom: 11,
              mapTypeControlOptions: {
                  mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain',
                      'styled_map']
              }
          });

          //Associate the styled map with the MapTypeId and set it to display.
          map.mapTypes.set('styled_map', styledMapType);
          map.setMapTypeId('styled_map');
      }

      function initAutocomplete() {
          var map = new google.maps.Map(document.getElementById('search-map-canvas'), {
              center: {lat: 37.09024, lng: -95.712891},
              zoom: 5,
              mapTypeId: 'roadmap',
              draggable: true,
              scrollwheel: false,
              mapTypeControl: false,
              styles:
                  [
                      {
                          "featureType": "all",
                          "elementType": "geometry.fill",
                          "stylers": [
                              {
                                  "weight": "2.00"
                              }
                          ]
                      },
                      {
                          "featureType": "all",
                          "elementType": "geometry.stroke",
                          "stylers": [
                              {
                                  "color": "#9c9c9c"
                              }
                          ]
                      },
                      {
                          "featureType": "all",
                          "elementType": "labels.text",
                          "stylers": [
                              {
                                  "visibility": "on"
                              }
                          ]
                      },
                      {
                          "featureType": "landscape",
                          "elementType": "all",
                          "stylers": [
                              {
                                  "color": "#f2f2f2"
                              }
                          ]
                      },
                      {
                          "featureType": "landscape",
                          "elementType": "geometry.fill",
                          "stylers": [
                              {
                                  "color": "#ffffff"
                              }
                          ]
                      },
                      {
                          "featureType": "landscape.man_made",
                          "elementType": "geometry.fill",
                          "stylers": [
                              {
                                  "color": "#ffffff"
                              }
                          ]
                      },
                      {
                          "featureType": "poi",
                          "elementType": "all",
                          "stylers": [
                              {
                                  "visibility": "off"
                              }
                          ]
                      },
                      {
                          "featureType": "road",
                          "elementType": "all",
                          "stylers": [
                              {
                                  "saturation": -100
                              },
                              {
                                  "lightness": 45
                              }
                          ]
                      },
                      {
                          "featureType": "road",
                          "elementType": "geometry.fill",
                          "stylers": [
                              {
                                  "color": "#eeeeee"
                              }
                          ]
                      },
                      {
                          "featureType": "road",
                          "elementType": "labels.text.fill",
                          "stylers": [
                              {
                                  "color": "#7b7b7b"
                              }
                          ]
                      },
                      {
                          "featureType": "road",
                          "elementType": "labels.text.stroke",
                          "stylers": [
                              {
                                  "color": "#ffffff"
                              }
                          ]
                      },
                      {
                          "featureType": "road.highway",
                          "elementType": "all",
                          "stylers": [
                              {
                                  "visibility": "simplified"
                              }
                          ]
                      },
                      {
                          "featureType": "road.arterial",
                          "elementType": "labels.icon",
                          "stylers": [
                              {
                                  "visibility": "off"
                              }
                          ]
                      },
                      {
                          "featureType": "transit",
                          "elementType": "all",
                          "stylers": [
                              {
                                  "visibility": "off"
                              }
                          ]
                      },
                      {
                          "featureType": "water",
                          "elementType": "all",
                          "stylers": [
                              {
                                  "color": "#46bcec"
                              },
                              {
                                  "visibility": "on"
                              }
                          ]
                      },
                      {
                          "featureType": "water",
                          "elementType": "geometry.fill",
                          "stylers": [
                              {
                                  "color": "#c8d7d4"
                              }
                          ]
                      },
                      {
                          "featureType": "water",
                          "elementType": "labels.text.fill",
                          "stylers": [
                              {
                                  "color": "#070707"
                              }
                          ]
                      },
                      {
                          "featureType": "water",
                          "elementType": "labels.text.stroke",
                          "stylers": [
                              {
                                  "color": "#ffffff"
                              }
                          ]
                      }
                  ]
          });



          // Create the search box and link it to the UI element.
          var input = document.getElementById('pac-input');
          var searchBox = new google.maps.places.SearchBox(input);
          map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);


          var markers = [];


            <% @properties.each do |p| %>


          (function(){
              var marker = new google.maps.Marker({
                  map: map,
                  title: '<%= p.id %>',
                  id: '<%= p.id %>',
                  animation: google.maps.Animation.DROP,
                  //icon: {url: '<%= p.photos.first.url %>',  scaledSize: new google.maps.Size(100, 100)},
                  icon: ' ',
                  label: {
                      fontFamily: 'Fontawesome',
                      text: '\uf015',
                      color: '#29abe2',
                      fontSize: '32px',
                      fontBorder: '1px',
                  },
                  position: {lat: <%= p.latitude %>, lng: <%= p.longitude %>}

              });

              google.maps.event.addListener(marker, 'mouseover', function() {
                  var label = this.getLabel();
                  label.color = "#f27c52bd";
                  label.fontSize = '40px';
                  this.setLabel(label);
              });
              google.maps.event.addListener(marker, 'mouseout', function() {
                  var label = this.getLabel();
                  label.color = "#29abe2";
                  label.fontSize = '32px';
                  this.setLabel(label);
              });

              marker.addListener('dblclick', function() {
                  map.setZoom(8);
                  map.setCenter(marker.getPosition());
              });
              marker.addListener('click', function() {
                  var infowindow = new google.maps.InfoWindow({
                      content: '<%= image_tag((p.photos.first), class: "profile-round") %><br><%= link_to p.address, property_path(p), target: :_blank %><br>$<%= p.price %>',
                      position: {lat: <%= p.latitude %>, lng: <%= p.longitude %>}

                  });
                  infowindow.open(map, marker);
                  var label = this.getLabel();
                  label.color = "rgba(199, 215, 212, 0.47)";
                  label.fontSize = '48px';
                  this.setLabel(label);
              });


              markers.push(marker);


//******************** Highlight Marker on ROW-DIV EVENT ***********
              $(document).ready(function() {
                  $(".prop-index-view").mouseover(function() {
                      var data = $(this).data('value');
                      var result = markers.filter(function(obj) {
                          return obj.id == data;

                      })[0];
                      console.log(result);
                      var rid = result.id;
                      console.log('id is equal to', rid);
                      console.log('first in array is', markers[0]);
                      console.log('markers is', markers);


                      google.maps.event.trigger(result, 'mouseover', function() {
                          var label = this.getLabel();
                          label.color = "#f27c52bd";
                          label.fontSize = '40px';
                          this.setLabel(label);
                      });

                  });
              });


              $(document).ready(function() {
                  $(".prop-index-view").mouseout(function() {
                      var data = $(this).data('value');
                      var result = markers.filter(function(obj) {
                          return obj.id == data;

                      })[0];
                      console.log(result);
                      var rid = result.id;
                      console.log('MOUSEOUT id is equal to', rid);
                      console.log('MOUSEOUT first in array is', markers[0]);
                      console.log('MOUSEOUT markers is', markers);



                      google.maps.event.trigger(result, 'mouseout', function() {
                          var label = this.getLabel();
                          label.color = "#29abe2";
                          label.fontSize = '32px';
                          this.setLabel(label);
                      });

                  });
              });

              $(document).ready(function() {
                  $(".prop-index-view").click(function() {
                      var data = $(this).data('value');
                      var result = markers.filter(function(obj) {
                          return obj.id == data;

                      })[0];
                      console.log(result);
                      var rid = result.id;
                      console.log('MOUSEOUT id is equal to', rid);
                      console.log('MOUSEOUT first in array is', markers[0]);
                      console.log('MOUSEOUT markers is', markers);



                      google.maps.event.trigger(result, 'click', function() {
                          var infowindow = new google.maps.InfoWindow({
                              content: '<%= image_tag((p.photos.first), class: "profile-round") %><br><%= link_to p.address, property_path(p), target: :_blank %><br>$<%= p.price %>',
                              position: {lat: <%= p.latitude %>, lng: <%= p.longitude %>}

                          });
                          infowindow.open(map, marker);
                          var label = this.getLabel();
                          label.color = "rgba(199, 215, 212, 0.47)";
                          label.fontSize = '48px';
                          this.setLabel(label);
                      });

                  });
              });



          })();










            <% end %>
          var bounds = new google.maps.LatLngBounds();
          for (var i = 0; i < markers.length; i++) {
              bounds.extend(markers[i].getPosition());
          }

          map.fitBounds(bounds);
              //$.each(gon.property_coordinates,function(index, coordinates){
                  //markers.push(new google.maps.Marker({
                      //map: map,
                      //title: 'bob',
                      //animation: google.maps.Animation.DROP,
                        //icon: {url: '<# @properties.first.photos.first.url %>', scaledSize: new google.maps.Size(100, 100)},

                      //position: {lat: coordinates.lat, lng: coordinates.lng}

                  //}));
//              })






      }

initAutocomplete();



//      ////  BOOTSTRAP TOUR www.bootstraptour.com ********************************
//
//      // Instance the tour
//      var tour = new Tour({
////            storage: false will launch the tour every time the page loads, otherwise it runs once or use button,
//
////            storage: false,
//          steps: [
//              {
//                  path: "/dashboard",
//                  element: "#film-button-tour",
//                  title: "Watch Video Button",
//                  content: "Here you can watch the video of your last showing!"
//              },
//              {
//                  path: "/properties",
//                  element: "#search_right",
//                  title: "Search For Property",
//                  content: "Search for property here, and then favorite to keep track of it in your dashboard!"
//              },
//              {
//                  path: "/dashboard",
//                  element: "#seller-dash-tabs",
//                  backdrop: true,
//                  title: "Here are the links for selling your house!",
//                  content: "Find everything you need to sell your house here."
//              }
//          ]});
//
//      // Initialize the tour
//      tour.init();
//      console.log('tour inited');
//
//      // Start the tour
//      tour.start();
//      console.log('tour started');
//
//      document.getElementById("tour-demo").onclick = function(){
//          tour.init();
//          console.log('tour inited');
//
//          // Start the tour
//          tour.start(true);
//          console.log('tour started');
//      };
//

          //********************************* styling of sorting links ****************************//
//      $(".search-filter").click(function(e){
////          e.preventDefault();
////          if ($(this).hasClass("search-sort")) {
////               $(this).removeClass("search-sort");
////          } else {
////              $(this).addClass("search-sort");
////          }
//          $(this).toggleClass("search-sort");
////          alert("someone sorted");
//      });
//
//      $(document).ready(function() {
//          $(".prop-index-view").hover(function() {
//              alert($(this).data('value'));
//              var data = $(this).data('value');
//              var result = markers.filter(function(obj) {
//                  return obj.id == data;
//              })[0];
//              console.log(result);
//          });
//      });

//
//      function highlightMarker(i) {
//          if (markers[i].getAnimation() !== null) {
//              markers[i].setAnimation(null);
//          } else {
//              markers[i].setAnimation(google.maps.Animation.BOUNCE);
//          }
//      }

  </script>







